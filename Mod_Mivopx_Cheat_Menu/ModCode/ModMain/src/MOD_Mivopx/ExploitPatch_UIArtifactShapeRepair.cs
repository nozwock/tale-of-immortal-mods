using HarmonyLib;
using TaleOfImmortalCheat.Localization;

namespace MOD_Mivopx;

[HarmonyPatch(typeof(UIArtifactShapeRepair), "OnRepairClick")]
internal class ExploitPatch_UIArtifactShapeRepair
{
	public static UIArtifactShapeRepair _instance;

	private static bool _isThisActive;

	public static bool IsThisActive
	{
		get
		{
			return _isThisActive;
		}
		set
		{
			_isThisActive = value;
		}
	}

	private static void Postfix(UIArtifactShapeRepair __instance)
	{
		_instance = __instance;
		if (_instance != null && IsThisActive)
		{
			if (_instance.propsShape != null)
			{
				ModMain.Log("propsShape: " + _instance.propsShape?.propsInfoBase?.name);
				ModMain.Log($"repairSubItem costMoney: {_instance.repairSubItem?.costMoney}");
				_instance.repairSubItem.costMoney = 69;
				ModMain.Log($"Modified - repairSubItem costMoney: {_instance.repairSubItem?.costMoney}");
				ModMain.Log($"repairSubItem materialNum: {_instance.repairSubItem?.materialNum}");
				_instance.repairSubItem.materialNum = 1;
				ModMain.Log($"Modified - repairSubItem materialNum: {_instance.repairSubItem?.materialNum}");
				ModMain.Log($"repairSubItem repairNum: {_instance.repairSubItem?.repairNum}");
				_instance.repairSubItem.repairNum = 1;
				ModMain.Log($"Modified - repairSubItem repairNum: {_instance.repairSubItem?.repairNum}");
			}
			else
			{
				ModMain.LogTip(LocalizationHelper.T("other_msgs_artifact_empty"), "WARNING");
			}
		}
	}
}
