using HarmonyLib;
using Il2CppSystem.Collections.Generic;
using TaleOfImmortalCheat;

namespace MOD_Mivopx;

[HarmonyPatch(typeof(UIMartialRealize), "Init")]
internal class ExploitPatch_UIMartialRealize
{
	public static UIMartialRealize _instance;

	private static bool _isThisActive;

	public static bool IsThisActive
	{
		get
		{
			return _isThisActive;
		}
		set
		{
			_isThisActive = value;
		}
	}

	private static void Postfix(UIMartialRealize __instance)
	{
		_instance = __instance;
		if (!(_instance != null) || !IsThisActive)
		{
			return;
		}
		ModMain.Log("----- ----- ----- ----- -----");
		ModMain.Log("ExploitPanel - Comprehend - Called");
		ModMain.Log("----- ----- ----- ----- -----");
		ConfBattleSkillRealizeCost battleSkillRealizeCost = Game.ConfMgr.battleSkillRealizeCost;
		if (battleSkillRealizeCost != null)
		{
			List<ConfBattleSkillRealizeCostItem>.Enumerator enumerator = battleSkillRealizeCost._allConfList.GetEnumerator();
			while (enumerator.MoveNext())
			{
				ConfBattleSkillRealizeCostItem current = enumerator.Current;
				current.money = 0;
				current.num = 0;
			}
		}
		ConfBattleSkillRealize battleSkillRealize = Game.ConfMgr.battleSkillRealize;
		if (battleSkillRealize != null)
		{
			ModMain.Log($"ceilingRange: {battleSkillRealize.ceilingRange}");
			battleSkillRealize._ceilingRange.value = 10000;
			ModMain.Log($"Modified - ceilingRange: {battleSkillRealize.ceilingRange}");
			ModMain.Log($"closePerfectRange: {battleSkillRealize.closePerfectRange}");
			battleSkillRealize._closePerfectRange.value = 10000;
			ModMain.Log($"Modified - closePerfectRange: {battleSkillRealize.closePerfectRange}");
			ModMain.Log($"perfectRequire: {battleSkillRealize.perfectRequire}");
			battleSkillRealize._perfectRequire.value = 1;
			ModMain.Log($"Modified - perfectRequire: {battleSkillRealize.perfectRequire}");
		}
	}
}
