using System;
using HarmonyLib;
using TaleOfImmortalCheat.Localization;
using UnityEngine;
using UnityEngine.UI;

namespace MOD_Mivopx;

[HarmonyPatch(typeof(UIPlayerInfoProperty), "UpdateUI")]
internal class ExploitPatch_UIPlayerInfoProperty
{
	public static UIPlayerInfoProperty _instance;

	private static bool _isThisActive;

	public static bool IsThisActive
	{
		get
		{
			return _isThisActive;
		}
		set
		{
			_isThisActive = value;
		}
	}

	private static void Postfix(UIPlayerInfoProperty __instance)
	{
		_instance = __instance;
		if (!IsThisActive)
		{
			return;
		}
		try
		{
			UIPlayerInfo uI = g.ui.GetUI<UIPlayerInfo>(UIType.PlayerInfo);
			if (!(uI != null))
			{
				return;
			}
			uI.isPToN = true;
			Transform transform = null;
			if (uI.property.goInfoRoot.transform.childCount > 0)
			{
				transform = uI.property.goInfoRoot.transform.GetChild(7);
				if (transform.childCount > 0)
				{
					transform = transform.GetChild(1);
				}
			}
			if (transform != null)
			{
				Text componentInChildren = transform.GetComponentInChildren<Text>();
				if (componentInChildren != null)
				{
					string text = "(<color=cyan>" + uI.unit.data.dynUnitData.beauty.value + "</color>)";
					componentInChildren.text += text;
					transform.gameObject.AddComponent<UISkyTipEffect>().InitData("Original Charisma Value: " + uI.unit.data.dynUnitData.beauty.baseValue + "\r\nEffect Bonus Value: " + uI.unit.data.dynUnitData.beauty.value);
				}
			}
		}
		catch (Exception ex)
		{
			ModMain.LogTip(string.Format(LocalizationHelper.T("other_msgs_error_ui_player_info_property"), ex.Message + ":" + ex.StackTrace), "WARNING");
		}
	}
}
