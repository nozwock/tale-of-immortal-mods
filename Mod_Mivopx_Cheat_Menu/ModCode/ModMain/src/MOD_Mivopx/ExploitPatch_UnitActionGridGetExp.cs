using HarmonyLib;
using Il2CppSystem.Collections.Generic;
using TaleOfImmortalCheat;
using TaleOfImmortalCheat.Localization;

namespace MOD_Mivopx;

[HarmonyPatch(typeof(UnitActionGridGetExp), "Init")]
internal class ExploitPatch_UnitActionGridGetExp
{
	public static UnitActionGridGetExp _instance;

	private static bool _isThisActive;

	public static bool IsThisActive
	{
		get
		{
			return _isThisActive;
		}
		set
		{
			_isThisActive = value;
		}
	}

	private static void Postfix(UnitActionGridGetExp __instance)
	{
		_instance = __instance;
		if (_instance == null || !IsThisActive || Game.ConfMgr.worldBlockGetExp == null)
		{
			return;
		}
		ModMain.Log("----- ----- ----- ----- -----");
		ModMain.Log("ExploitPanel - Cultivate - Called");
		ModMain.Log("----- ----- ----- ----- -----");
		if (Game.WorldManager.Value.playerUnit.data.dynUnitData != null)
		{
			int baseValue = Game.WorldManager.Value.playerUnit.data.dynUnitData.exp.baseValue;
			if (Game.ConfMgr.worldBlockGetExp != null)
			{
				List<ConfWorldBlockGetExpItem>.Enumerator enumerator = Game.ConfMgr.worldBlockGetExp._allConfList.GetEnumerator();
				while (enumerator.MoveNext())
				{
					ConfWorldBlockGetExpItem current = enumerator.Current;
					if (current != null)
					{
						if (current.costDay != 0)
						{
							current.costDay = 0;
						}
						if (baseValue <= 0)
						{
							current.expPerGas = 10f;
						}
						else
						{
							current.expPerGas = baseValue;
						}
					}
				}
			}
			else
			{
				ModMain.LogTip(LocalizationHelper.T("other_msgs_cultivate_worldblock_empty"), "WARNING");
			}
		}
		else
		{
			ModMain.LogTip(LocalizationHelper.T("other_msgs_cultivate_player_unit_empty"), "WARNING");
		}
	}
}
