using HarmonyLib;

namespace MOD_Mivopx;

[HarmonyPatch(typeof(UnitActionPropMartialStudy), "Init")]
internal class ExploitPatch_UnitActionPropMartialStudy
{
	public static UnitActionPropMartialStudy _instance;

	private static bool _isThisActive;

	public static bool IsThisActive
	{
		get
		{
			return _isThisActive;
		}
		set
		{
			_isThisActive = value;
		}
	}

	private static void Postfix(UnitActionPropMartialStudy __instance)
	{
		_instance = __instance;
		if (_instance != null && IsThisActive)
		{
			int num = 0;
			int money = 0;
			ModMain.Log("----- ----- ----- ----- -----");
			ModMain.Log("ExploitPanel - MartialStudy - Called");
			ModMain.Log("----- ----- ----- ----- -----");
			ModMain.Log("name " + _instance.martialData?.martialInfo?._name);
			ModMain.Log($"day {_instance.day}");
			_instance.day = num;
			ModMain.Log($"Modified - day {_instance.day}");
			ModMain.Log($"money {_instance.money}");
			_instance.money = money;
			ModMain.Log($"Modified - money {_instance.money}");
			ModMain.Log($"skillCostItem days {_instance.skillCostItem?.days}");
			_instance.skillCostItem.days = num;
			ModMain.Log($"Modified - skillCostItem days {_instance.skillCostItem?.days}");
			ModMain.Log($"skillCostItem money {_instance.skillCostItem?.money}");
			_instance.skillCostItem.money = money;
			ModMain.Log($"Modified - skillCostItem money {_instance.skillCostItem?.money}");
		}
	}
}
